this priciple tells us to use the interface in a correct way.
it is used to decrease coupling and increase cohesion.
The Interface Segregation Principle (ISP) states that clients should
not be forced to depend on methods that they do not use.  
Interfaces should belong to clients, not to libraries or hierarchies.
Application developers should favor thin, focused interfaces to “fat” 
interfaces that offer more functionality than a particular class or 
method needs.
for example:
public interface IMembership
{
  bool Login(string username, string password);
  void Logout(string username);
  Guid Register(string username, string password, string email);
  void ForgotPassword(string username);
}


public interface ILogin
{
  bool Login(string username, string password);
  void Logout(string username);
}
 
public interface IMembership : ILogin
{
  Guid Register(string username, string password, string email);
  void ForgotPassword(string username);
}